{"ast":null,"code":"var _jsxFileName = \"/home/marcuslinux/development/assignments/module-5/capstone/level-5-capstone/level-5-capstone/client/src/components/forms/CheckInForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { PersonContext } from \"../../context/PersonContext\";\nimport { DisplayContext } from \"../../context/DisplayContext\";\nimport CheckInButton from \"../buttons/CheckInButton\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckInForm = props => {\n  _s();\n\n  const {\n    familyMembers,\n    setFamilyMembers,\n    comingBack,\n    setComingBack // checkInFunction,\n\n  } = useContext(PersonContext);\n  const {\n    setFormState\n  } = useContext(DisplayContext);\n  const [clicked, setClicked] = useState({}); // const handleChange = e => {\n  // \tconst { name, value } = e.target\n  // \tcomingBack.indexOf(value) > -1\n  // \t\t? setComingBack(comingBack.filter(person => person !== name))\n  // \t\t: setComingBack(prevState => [...prevState, value])\n  // }\n\n  const handleSubmit = e => {\n    e.preventDefault(); // Update the status for each of the people\n\n    comingBack.map(person => {\n      const returnedPerson = familyMembers.findIndex(member => member.name === person);\n      const source = {\n        name: person,\n        atHome: true,\n        location: \"\",\n        ert: null\n      };\n      const target = familyMembers[returnedPerson];\n      const returnedTarget = Object.assign(target, source);\n      const remainingPersons = familyMembers.filter(human => human.name !== person);\n      return setFamilyMembers([returnedTarget, ...remainingPersons]);\n    });\n    setFormState(\"status\");\n  };\n\n  const handleClick = (e, person) => {\n    e.preventDefault();\n    const {\n      name\n    } = e.target;\n    comingBack.indexOf(name) > -1 ? setComingBack(comingBack.filter(person => person !== name)) : setComingBack(prevState => [...prevState, name]);\n    setClicked(prevState => {\n      return { ...prevState,\n        [name]: clicked[name] ? false : true\n      };\n    });\n    console.log(clicked);\n  };\n\n  const renderForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      name: \"checkInForm\",\n      id: \"checkInForm\",\n      onSubmit: handleSubmit,\n      children: familyMembers.map((person, index) => {\n        return (// const personName = person.name\n          person.atHome === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(CheckInButton, {\n              clicked: clicked[person.name],\n              personName: person.name,\n              id: person.name,\n              onClick: handleClick\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 9\n            }, this)\n          }, person.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 8\n          }, this) : console.log(\"Person is at home\")\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this);\n  }; // useEffect(() => {\n  // \tconst results = renderForm()\n  // \treturn () => {\n  // \t\tconsole.log(\"CheckInForm Refreshed\")\n  // \t}\n  // }, [clicked])\n\n\n  return renderForm();\n};\n\n_s(CheckInForm, \"POz9HWPMngDAMXZfWkv1BTUM7j8=\");\n\n_c = CheckInForm;\nexport default CheckInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckInForm\");","map":{"version":3,"sources":["/home/marcuslinux/development/assignments/module-5/capstone/level-5-capstone/level-5-capstone/client/src/components/forms/CheckInForm.js"],"names":["React","useState","useContext","useEffect","PersonContext","DisplayContext","CheckInButton","axios","CheckInForm","props","familyMembers","setFamilyMembers","comingBack","setComingBack","setFormState","clicked","setClicked","handleSubmit","e","preventDefault","map","person","returnedPerson","findIndex","member","name","source","atHome","location","ert","target","returnedTarget","Object","assign","remainingPersons","filter","human","handleClick","indexOf","prevState","console","log","renderForm","index"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\"\r\nimport { PersonContext } from \"../../context/PersonContext\"\r\nimport { DisplayContext } from \"../../context/DisplayContext\"\r\nimport CheckInButton from \"../buttons/CheckInButton\"\r\nimport axios from \"axios\"\r\n\r\nconst CheckInForm = props => {\r\n\tconst {\r\n\t\tfamilyMembers,\r\n\t\tsetFamilyMembers,\r\n\t\tcomingBack,\r\n\t\tsetComingBack,\r\n\t\t// checkInFunction,\r\n\t} = useContext(PersonContext)\r\n\tconst { setFormState } = useContext(DisplayContext)\r\n\tconst [clicked, setClicked] = useState({})\r\n\r\n\t// const handleChange = e => {\r\n\t// \tconst { name, value } = e.target\r\n\t// \tcomingBack.indexOf(value) > -1\r\n\t// \t\t? setComingBack(comingBack.filter(person => person !== name))\r\n\t// \t\t: setComingBack(prevState => [...prevState, value])\r\n\t// }\r\n\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault()\r\n\t\t// Update the status for each of the people\r\n\t\tcomingBack.map(person => {\r\n\t\t\tconst returnedPerson = familyMembers.findIndex(\r\n\t\t\t\tmember => member.name === person\r\n\t\t\t)\r\n\r\n\t\t\tconst source = {\r\n\t\t\t\tname: person,\r\n\t\t\t\tatHome: true,\r\n\t\t\t\tlocation: \"\",\r\n\t\t\t\tert: null,\r\n\t\t\t}\r\n\r\n\t\t\tconst target = familyMembers[returnedPerson]\r\n\t\t\tconst returnedTarget = Object.assign(target, source)\r\n\t\t\tconst remainingPersons = familyMembers.filter(\r\n\t\t\t\thuman => human.name !== person\r\n\t\t\t)\r\n\t\t\treturn setFamilyMembers([returnedTarget, ...remainingPersons])\r\n\t\t})\r\n\t\tsetFormState(\"status\")\r\n\t}\r\n\r\n\tconst handleClick = (e, person) => {\r\n\t\te.preventDefault()\r\n\t\tconst { name } = e.target\r\n\t\tcomingBack.indexOf(name) > -1\r\n\t\t\t? setComingBack(comingBack.filter(person => person !== name))\r\n\t\t\t: setComingBack(prevState => [...prevState, name])\r\n\t\tsetClicked(prevState => {\r\n\t\t\treturn {\r\n\t\t\t\t...prevState,\r\n\t\t\t\t[name]: clicked[name] ? false : true,\r\n\t\t\t}\r\n\t\t})\r\n\t\tconsole.log(clicked)\r\n\t}\r\n\r\n\tconst renderForm = () => {\r\n\t\treturn (\r\n\t\t\t<form name=\"checkInForm\" id=\"checkInForm\" onSubmit={handleSubmit}>\r\n\t\t\t\t{familyMembers.map((person, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t// const personName = person.name\r\n\t\t\t\t\t\tperson.atHome === false ? (\r\n\t\t\t\t\t\t\t<div key={person.name}>\r\n\t\t\t\t\t\t\t\t<CheckInButton\r\n\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\tclicked={clicked[person.name]}\r\n\t\t\t\t\t\t\t\t\tpersonName={person.name}\r\n\t\t\t\t\t\t\t\t\tid={person.name}\r\n\t\t\t\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\tconsole.log(\"Person is at home\")\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n\r\n\t// useEffect(() => {\r\n\t// \tconst results = renderForm()\r\n\t// \treturn () => {\r\n\t// \t\tconsole.log(\"CheckInForm Refreshed\")\r\n\t// \t}\r\n\t// }, [clicked])\r\n\r\n\treturn renderForm()\r\n}\r\n\r\nexport default CheckInForm\r\n"]},"metadata":{},"sourceType":"module"}